% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitmarkovmodel.R
\name{fitmarkovmodel}
\alias{fitmarkovmodel}
\title{Estimation of a k-th order Markov chain}
\usage{
fitmarkovmodel(sequences, states, k = 1, init.estim = c("mle", "freq", "prod"))
}
\arguments{
\item{sequences}{A list of vectors representing the sequences.}

\item{states}{Vector of state space (of length s).}

\item{k}{Order of the Markov chain.}

\item{init.estim}{Optional. Method used to estimate the initial distribution.
If \code{init.estim = "mle"}, then the classical Maximum Likelihood Estimator
is used, if \code{init.estim = "freq"}, then, the initial distribution \code{init}
is estimated by taking the frequences of the words of length \code{k} for all
sequences. If \code{init.estim = "prod"}, then, \code{init} is estimated by using
the product of the frequences of each letter (for all the sequences) in
the word of length \code{k}. See Details for the formulas.}
}
\value{
An object of class \link{markovmodel}.
}
\description{
Estimation of the transition matrix and initial law of a k-th
order Markov chain starting from one or several sequences.
}
\details{
Let \eqn{X_1, X_2, ..., X_n} be a trajectory of length \eqn{n} of
the Markov chain \eqn{X = (X_m)_{m \in N}} of order \eqn{k = 1} with
transition matrix \eqn{p_{trans}(i,j) = P(X_{m+1} = j | X_m = i)}. The
estimation of the transition matrix is \eqn{\widehat{p_{trans}}(i,j) = \frac{N_{ij}}{N_{i.}}},
where \eqn{N_{ij}} is the number of transitions from state \eqn{i} to state
\eqn{j} and \eqn{N_{i.}} is the number of transition from state \eqn{i}
to any state. For \eqn{k > 1} we have similar expressions.

The initial distribution of a k-th order Markov chain is defined as
\eqn{\mu_i = P(X_1 = i)}. Three methods are proposed for the estimation
of the latter :
\describe{
\item{Estimation based on the Maximum Likelihood Estimator:}{
The Maximum Likelihood Estimator for the initial distribution. The
formula is: \eqn{\widehat{\mu_i} = \frac{Nstart_i}{L}}, where
\eqn{Nstart_i} is the number of occurences of the word \eqn{i} (of
length \eqn{k}) at the beginning of each sequence and \eqn{L} is the
number of sequences. This estimator is reliable when the number of
sequences \eqn{L} is high.}
\item{Estimation based on the frequency:}{The initial distribution is
estimated by taking the frequences of the words of length \code{k} for all
sequences. The formula is \eqn{\widehat{\mu_i} = \frac{N_i}{N}}, where
\eqn{N_i} is the number of occurences of the word \eqn{i} (of length \eqn{k})
in the sequences and \eqn{N} is the sum of the lengths of the sequences.}
\item{Estimation based on the product of the frequences of each state:}{
The initial distribution is estimated by using the product of the
frequences of each state (for all the sequences) in the word of length
\eqn{k}.}
}
}
\examples{
states <- c("a", "c", "g", "t")
s <- length(states)
k <- 2
vect.init <- rep.int(1 / s ^ k, s ^ k)
p <- matrix(0.25, nrow = s ^ k, ncol = s)

# Specify the Markov model
markov1 <- markovmodel(states = states, init = vect.init, ptrans = p, k = k)

seq1 <- simulate(object = markov1, nsim = c(1000, 10000, 2000), seed = 150)

est <- fitmarkovmodel(sequences = seq1, states = states, k = 2)

}
\seealso{
\link{markovmodel}, \link{simulate}, \link{smmnonparametric}, \link{smmparametric}, \link{fitsemimarkovmodel}
}
